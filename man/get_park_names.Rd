% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_park_names-INPWO0663136242.R,
%   R/get_park_names.R
\name{get_park_names}
\alias{get_park_names}
\title{Adds a unit name column into a data frame with a unit code column}
\usage{
get_park_names(
  df,
  unit_column = "Park_Code",
  no_names = NA_character_,
  many_names = NA_character_
)

get_park_names(
  df,
  unit_column = "Park_Code",
  no_names = NA_character_,
  many_names = NA_character_
)
}
\arguments{
\item{df}{is a dataframe with a unit code column}

\item{unit_column}{defaults to \code{Park_Code}, is the index number (int) or the name (char) of the column containing unit codes}

\item{no_names}{defaults to \code{NA_character_}, populates the parkName column for rows where the unit code resolves to no park names}

\item{many_names}{defaults to \code{NA_character_}, populates the parkName column for rows where the unit code resolves to multiple park names}
}
\value{
the dataframe df with a new column parkName containing the expanded unit codes

the dataframe df with a new column parkName containing the expanded unit codes
}
\description{
\code{get_park_names} takes a data frame and the name or index number of the column containing unit codes
and returns the same data frame with an added column containing the corresponding park names using a public IRMA API.
For example if given the code "ROMO" the function will add "Rocky Mountain National Park" into the park name column.
If some park codes are not found, prints a statement with the list of codes it could not recognize.

\code{get_park_names} takes a data frame and the name or index number of the column containing unit codes
and returns the same data frame with an added column containing the corresponding park names using a public IRMA API.
For example if given the code "ROMO" the function will add "Rocky Mountain National Park" into the park name column.
If some park codes are not found, prints a statement with the list of codes it could not recognize.
}
\examples{
\dontrun{
get_park_names(exampleDF)
get_park_names(exampleDF, 2)
get_park_names(exampleDF, "parkCode")
get_park_names(exampleDF, "parkCode", no_names = "No park name found", many_names = "Multiple park names found")
}
\dontrun{
get_park_names(exampleDF)
get_park_names(exampleDF, 2)
get_park_names(exampleDF, "parkCode")
get_park_names(exampleDF, "parkCode", no_names = "No park name found", many_names = "Multiple park names found")
}
}
